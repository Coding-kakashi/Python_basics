# -*- coding: utf-8 -*-
"""python_basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qD-M0qi9d73O4_yKOU85j6lt2BdzAtE6

#**Practical Questions**

1. Write a Python program to print "Hello, World!"
"""

print("Hello,world!")

"""2. Write a Python program that displays your name and age."""

given_name = input("Enter your name: ")
given_age = int(input("Enter your age: "))
print(f"Your name is {given_name} and your age is {given_age}.")

"""3. Write code to print all the pre-defined keywords in Python using the keyword library."""

import keyword

all_keywords = keyword.kwlist
print(all_keywords)

"""4. Write a program that checks if a given word is a Python keyword."""

import keyword

given_word = input("Enter a word: ")

if keyword.iskeyword(given_word):
    print(f"{given_word} is a Python keyword.")
else:
    print(f"{given_word} is not a Python keyword.")

"""5. Create a list and tuple in Python, and demonstrate how attempting to change an element works differently
for each.

"""

my_list = [1, 2, 3, 4, 5]
my_tuple = (1, 2, 3, 4, 5)

# Modifying the list (no error)
my_list[2] = 10
print(my_list)  # Output: [1, 2, 10, 4, 5]

# Attempting to modify the tuple (raise error , preventing it using try-except)
try:
    my_tuple[2] = 10
except TypeError:
    print("Cannot modify a tuple as they are immutable.")

"""6. Write a function to demonstrate the behavior of mutable and immutable arguments."""

def modify_arguments(mutable_arg, immutable_arg):
    mutable_arg[0] = 10  # Modifying the mutable argument
    immutable_arg = 20   # Attempting to modify the immutable argument

    print("Inside function:")
    print(f"Mutable argument: {mutable_arg}")
    print(f"Immutable argument: {immutable_arg}")


# Calling the function
my_list = [1, 2, 3]
my_int = 5

modify_arguments(my_list, my_int)

print("\nOutside function:")
print(f"Mutable argument: {my_list}")
print(f"Immutable argument: {my_int}")

"""7. Write a program that performs basic arithmetic operations on two user-input numbers."""

given_numbers = input("Enter two numbers seperated by commas: ")
num1,num2 = given_numbers.split(",")
num1 = float(num1)
num2 = float(num2)

print(f"Addition of {num1} and {num2} is {num1+num2}")
print(f"Subtraction of {num1} and {num2} is {num1-num2}")
print(f"Subtraction of {num2} and {num1} is {num2-num1}")
print(f"Multiplication of {num1} and {num2} is {num1*num2}")

try:
  print(f"Quotient of {num1} and {num2} is {num1/num2}")
except ZeroDivisionError:
  print(f"Quotient of {num1} and {num2} is", float('inf'))

try:
  print(f"Quotient of {num2} and {num1} is {num2/num1}")
except ZeroDivisionError:
  print(f"Quotient of {num2} and {num1} is", float('inf'))

print(f"Remainder of {num1} and {num2} is {num1%num2}")
print(f"Remainder of {num2} and {num1} is {num2%num1}")
print(f"Power of {num1} and {num2} is {num1**num2}")
print(f"Power of {num2} and {num1} is {num2**num1}")

"""8. Write a program to demonstrate the use of logical operators."""

given_numbers = input("Enter two numbers seperated by commas: ")
num1,num2 = given_numbers.split(",")
num1 = float(num1)
num2 = float(num2)

if num1 > 0 and num2 > 0:
    print("Both numbers are positive.")

elif num1 > 0 or num2 > 0:
    print("At least one number is positive.")

else:
    print("Not both numbers are positive.")

"""9. Write a Python program to convert user input from string to integer, float, and boolean type."""

num = input("Enter a number: ")
num_int = int(num)
num_float = float(num)
num_bool = bool(num)
print(f"Integer value of {num} is {num_int}")
print(f"Float value of {num} is {num_float}")
print(f"Boolean value of {num} is {num_bool}")

"""10.Write code to demonstrate type casting with list elements"""









